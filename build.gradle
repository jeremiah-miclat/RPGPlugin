plugins {
    id 'java'
}

group = 'github.eremiyuh.rPGPlugin'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://nexus.scarsz.me/content/groups/public/' }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    compileOnly 'com.discordsrv:discordsrv:1.28.0'
    compileOnly 'net.dv8tion:JDA:5.0.0-alpha.14'  // Ensure this matches the version compatible with DiscordSRV
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

//task copyToServer(type: Copy) {
//    from "$buildDir/libs" // Source folder where the .jar file is created
//    into "C:/Users/USER/Desktop/New folder/plugins" // Destination folder (your server's plugins folder)
//    include "*.jar"
//}




task copyToServer(type: Copy) {
    from "$buildDir/libs"
    into "C:/Users/USER/Desktop/Paper 1.21/plugins"
    include "*.jar"
}


// Ensure that the task runs after the build task completes
build.finalizedBy(copyToServer)

